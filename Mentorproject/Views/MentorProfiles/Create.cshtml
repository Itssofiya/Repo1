@model Mentorproject.MentorProfile

@{
    ViewBag.Title = "Create";
}

<h2 style="font-family:Cooper;color:black;"> Fill Below Details</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal"style="color: whitesmoke; background-image: url('../../IMGS/blackred.jpg');padding-top:20px">
        <h4 style="font-family:Century;">MentorProfile</h4>
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.MentorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MentorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MentorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.DomainId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DomainId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DomainId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.IndustryExperience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IndustryExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IndustryExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.MentoringExperience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MentoringExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MentoringExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.AvailableFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="font-family:Century">
            @Html.LabelFor(model => model.AvailableTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"style="padding-bottom:5%">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
